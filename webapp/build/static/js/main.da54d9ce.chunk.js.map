{"version":3,"sources":["Button/TopButton.jsx","Button/TermButton.jsx","Button/SaveButton.jsx","Button/ShowAllButton.jsx","Card/Card.jsx","Textfield/Popularity.jsx","Pure/HeadlineEmoji.jsx","Textfield/Headline.jsx","Textfield/AudioFeature.jsx","Pure/TodaysDate.jsx","Collage/Collage.jsx","App.jsx","reportWebVitals.js","Login.jsx","index.js"],"names":["TopButton","props","style","isSelected","backgroundColor","onClick","className","category","TermButton","name","termdesc","SaveButton","isVisible","display","id","visible","ShowAllButton","show","Card","cardStyle","background","backgroundUrl","allCardsStyle","isCardVisible","areCardsVisible","href","link","target","rel","text","subtext","Popularity","popularityEmoji","averagePopularity","leastMainstreamEmoji","pure","Math","round","random","Headline","username","AudioFeature","emoji","score","scale","getDate","today","Date","dd","String","padStart","getMonth","getFullYear","Collage","term","images","enableLightbox","enableImageSelection","onClickThumbnail","index","window","open","url","withRouter","useState","audioFeatures","setAudioFeatures","energyEmoji","setEnergyEmoji","danceabilityEmoji","setDanceabilityEmoji","tempoEmoji","setTempoEmoji","happinessEmoji","setHappinessEmoji","tracksPopularityEmoji","setTracksPopularityEmoji","artistsPopularityEmoji","setArtistsPopularityEmoji","topVisible","setTopVisible","termSelected","setTermSelected","setTerm","termText","setTermText","setAreCardsVisible","showText","setShowText","showTextMessage","setShowTextMessage","isLoading","setIsLoading","artistsData","setArtistsData","tracksData","setTracksData","userData","setUserData","tracksPopularity","setTracksPopularity","artistsPopularity","setArtistsPopularity","tracksCollage","setTracksCollage","artistsCollage","setArtistsCollage","history","useHistory","useEffect","accessToken","URLSearchParams","location","search","get","axios","then","res","audio","data","audio_features","tracks","tracks_popularity","artists","artists_popularity","user_data","artists_data","tracks_data","tracks_collage","artists_collage","generateAudioEmoji","generateCollageText","catch","error","console","log","response","status","push","danceability","energy","tempo","happiness","average_popularity","emojiList","Number","MAX_VALUE","i","valueRange","begin","end","toCanvas","scrollTo","html2canvas","document","querySelector","useCORS","allowTaint","canvas","a","createElement","download","toDataURL","body","appendChild","click","removeChild","resetCardsButton","application","least_mainstream_artist_name","least_mainstream_artist_url","least_mainstream_track_name","least_mainstream_track_url","React","Children","toArray","map","track_data","track_background","track_url","track_rank","track_name","track_artists","artist_data","artist_background","artist_url","artist_rank","artist_name","artist_followers","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","onFailure","Login","clientId","redirectUri","scope","onSuccess","access_token","ReactDOM","render","StrictMode","exact","path","getElementById"],"mappings":"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","file":"static/js/main.da54d9ce.chunk.js","sourcesContent":["import React from \"react\";\nimport './TopButton.css';\n\nconst TopButton = props => {\n  let style = {};\n\n  if (props.isSelected) {\n    style.backgroundColor = \"#306b30\";\n  }\n\n  return (\n    <div onClick={props.onClick}\n         style={style}\n         className=\"button\">\n      <span>top {props.category}</span>\n    </div>);\n};\n\nexport default TopButton;","import React from \"react\";\nimport './TermButton.css';\n\nconst TermButton = props => {\n  let style = {};\n\n  if (props.isSelected) {\n    style.backgroundColor = \"rgba(89, 89, 89, 1)\";\n  }\n\n  return (\n    <div onClick={props.onClick} className=\"term-button\" style={style} >\n      <span name=\"term\">{props.termdesc}</span>\n    </div>\n  );\n};\n\nexport default TermButton;","import React from \"react\";\nimport './SaveButton.css';\nimport { FaDownload } from 'react-icons/fa';\n\n\nconst SaveButton = props => {\n  let style = {}\n\n  if (props.isVisible) {\n    style.display = 'block';\n  } else {\n    style.display = 'none';\n  }\n\n  return (\n    <div style={style}>\n      <div className=\"save-button\"\n           id={props.id}\n           onClick={props.onClick}\n           visible={props.isVisible}>\n        <span><FaDownload/> download collage</span>\n      </div>\n    </div>\n  );\n};\n\nexport default SaveButton;","import React from \"react\";\nimport './ShowAllButton.css';\n\nconst ShowAllButton = props => {\n return (\n    <div>\n      <div className=\"show-all-button\"\n           onClick={props.onClick}\n           visible={props.isVisible}>\n        <span>{props.show}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ShowAllButton;","import React from \"react\";\nimport './Card.css';\n\nconst Card = props => {\n  let cardStyle = {\n    background: `url(${props.backgroundUrl})`,\n  };\n\n  let allCardsStyle = {}\n\n  if (props.isCardVisible) {\n    cardStyle.display = 'block';\n  } else {\n    cardStyle.display = 'none';\n  }\n\n  if (props.areCardsVisible) {\n    allCardsStyle.display = 'block';\n  } else {\n    allCardsStyle.display = 'none';\n  }\n\n  return (\n    <div style={allCardsStyle}>\n      <a className=\"card-link\"\n         href={props.link}\n         target=\"_blank\"\n         rel=\"noreferrer\">\n        <div className=\"card-ranking\"\n             style={cardStyle}>\n          <span>{props.text}</span>\n          <div className=\"card-subtext\">\n            <span>{props.subtext}</span>\n          </div>\n        </div>\n      </a>\n    </div>\n  );\n};\n\nexport default Card;","import React from \"react\";\nimport './Popularity.css';\n\nconst Popularity = props => {\n  let style = {};\n\n  if (props.isVisible) {\n    style.display = 'block';\n  } else {\n    style.display = 'none';\n  }\n\n  return (\n    <div style={style}>\n      <div className=\"popularity-content\">\n        <div className=\"popularity-element\">\n          <div className=\"popularity-emoji\">{props.popularityEmoji}</div>\n          <div className=\"average-popularity\">{props.averagePopularity}/10</div>\n          <div className=\"description\">popularity</div>\n        </div>\n\n        <div className=\"popularity-element\">\n          <div> {props.leastMainstreamEmoji} </div>\n          <a className=\"popularity-link\" href={props.link} target=\"_blank\" rel=\"noreferrer\">\n            <div className=\"name\">{props.name}</div>\n          </a>\n          <div className=\"description\">least mainstream</div>\n        </div>\n      </div>\n    </div>);\n\n};\n\nexport default Popularity;","import React from \"react\";\nimport './HeadlineEmoji.css';\nimport {pure} from 'recompose';\n\nconst headlineEmoji = () => {\n  let emoji = ['✌😗', '😤🗣💯', '👁️👄👁️', '🦔🐾', '🤘😎'];\n  const randomNumber = Math.round(Math.random() * 4);\n  return emoji[randomNumber];\n}\n\nconst HeadlineEmoji = () => {\n  return (\n    <>\n      {headlineEmoji()}\n    </>\n  )\n};\n\nexport default pure(HeadlineEmoji);\n","import './Headline.css';\nimport HeadlineEmoji from \"../Pure/HeadlineEmoji\";\n\nconst Headline = props => {\n  return (\n    <div className=\"headline\">\n      <h1><span className=\"username\">{props.username}</span> Mini Wrap <HeadlineEmoji/></h1>\n    </div>);\n};\n\nexport default Headline;\n","import React from \"react\";\nimport './AudioFeature.css';\n\nconst AudioFeature = props => {\n  return (\n    <div className=\"audio-feature\">\n      <div className=\"audio-feature-emoji\">{props.emoji}</div>\n      <div>{props.score}{props.scale}</div>\n      <div className=\"audio-feature-category\">{props.category}</div>\n    </div>);\n};\n\nexport default AudioFeature;","import React from \"react\";\nimport './TodaysDate.css';\nimport {pure} from 'recompose';\n\nconst getDate = () => {\n  let today = new Date();\n  let dd = String(today.getDate()).padStart(2, '0');\n  let mm = String(today.getMonth() + 1).padStart(2, '0');\n  let yyyy = today.getFullYear();\n\n  return (mm + '/' + dd + '/' + yyyy)\n};\n\nconst TodaysDate = props => {\n  return (\n    <span className=\"date-textfield\">\n      {getDate()}\n    </span>\n  )\n};\n\nexport default pure(TodaysDate);\n","import React from 'react';\nimport Gallery from 'react-grid-gallery';\nimport './Collage.css';\nimport TodaysDate from \"../Pure/TodaysDate\";\n\nconst Collage = props => {\n  let style = {}\n\n  if (props.isVisible) {\n    style.display = 'block';\n  } else {\n    style.display = 'none';\n  }\n\n  return (\n    <div className=\"gallery\"\n         id={props.id}\n         style={style}>\n      <div className=\"collage-headline\">\n        my top {props.category} {props.term}\n      </div>\n\n      <Gallery images={props.images}\n               enableLightbox={false}\n               enableImageSelection={false}\n               onClickThumbnail={(index) => {window.open(props.images[index].url, '_blank')}}/>\n\n      <div className=\"collage-subtext\">\n        <span className=\"website-name\">https://wrapped.mudi.me/</span>\n        <TodaysDate/>\n      </div>\n    </div>\n  );\n}\n\nexport default Collage;\n","import './App.css';\nimport './Spinner.css';\nimport React, {useState, useEffect} from \"react\";\nimport axios from 'axios';\nimport html2canvas from \"html2canvas\";\nimport {useHistory, withRouter} from 'react-router-dom';\nimport TopButton from \"./Button/TopButton\";\nimport TermButton from \"./Button/TermButton\";\nimport SaveButton from \"./Button/SaveButton\";\nimport ShowAllButton from \"./Button/ShowAllButton\";\nimport GithubCorner from 'react-github-corner';\nimport Card from \"./Card/Card\";\nimport Popularity from \"./Textfield/Popularity\";\nimport Headline from \"./Textfield/Headline\";\nimport AudioFeature from \"./Textfield/AudioFeature\";\nimport Collage from \"./Collage/Collage\";\n\nconst App = () => {\n\n  const leastMainstreamEmoji = '🎧'\n  const [audioFeatures, setAudioFeatures] = useState([]);\n  const [energyEmoji, setEnergyEmoji] = useState('')\n  const [danceabilityEmoji, setDanceabilityEmoji] = useState('')\n  const [tempoEmoji, setTempoEmoji] = useState('')\n  const [happinessEmoji, setHappinessEmoji] = useState('')\n  const [tracksPopularityEmoji, setTracksPopularityEmoji] = useState('')\n  const [artistsPopularityEmoji, setArtistsPopularityEmoji] = useState('')\n\n  const [topVisible, setTopVisible] = useState('top tracks')\n  const [termSelected, setTermSelected] = useState('medium_term')\n  const [term, setTerm] = useState('medium_term');\n  const [termText, setTermText] = useState('this year')\n  const [areCardsVisible, setAreCardsVisible] = useState(false)\n  const [showText, setShowText] = useState(false)\n  const [showTextMessage, setShowTextMessage] = useState('show all')\n  const [isLoading, setIsLoading] = useState(true)\n\n  const [artistsData, setArtistsData] = useState([]);\n  const [tracksData, setTracksData] = useState([]);\n  const [userData, setUserData] = useState(['my']);\n  const [tracksPopularity, setTracksPopularity] = useState([]);\n  const [artistsPopularity, setArtistsPopularity] = useState([]);\n  const [tracksCollage, setTracksCollage] = useState([]);\n  const [artistsCollage, setArtistsCollage] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    const generateCollageText = () => {\n      switch (termSelected) {\n        case 'short_term': {\n          setTermText('this month')\n          break;\n        }\n\n        case 'long_term': {\n          setTermText('of all time')\n          break;\n        }\n\n        default: {\n          setTermText('this year')\n          break;\n        }\n      }\n    }\n\n    let url;\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n      url = \"http://localhost:3000\"\n    } else {\n      url = \"https://api.wrapped.mudi.me\"\n    }\n    setIsLoading(true);\n    const urlParams = new URLSearchParams(window.location.search);\n    const accessToken = urlParams.get('access_token');\n\n    axios.get(`${url}/api/top/?term=${term}&spotify_token=${accessToken}`)\n      .then(\n        res => {\n          let audio = res.data.audio_features;\n          let tracks = res.data.tracks_popularity;\n          let artists = res.data.artists_popularity;\n\n          setUserData(`${res.data.user_data}'s`)\n          setArtistsData(res.data.artists_data);\n          setTracksData(res.data.tracks_data);\n          setTracksCollage(res.data.tracks_collage);\n          setArtistsCollage(res.data.artists_collage);\n          setIsLoading(false)\n          setAudioFeatures(audio)\n          setTracksPopularity(tracks);\n          setArtistsPopularity(artists);\n\n          generateAudioEmoji(audio, tracks, artists);\n          generateCollageText();\n        })\n      .catch(function (error) {\n        console.log(error);\n        if (error.response.status === 400) {\n          history.push('/')\n        }\n      });\n  }, [history, term, termSelected])\n\n\n  const generateAudioEmoji = (audio, tracks, artists) => {\n    let danceability = audio.danceability;\n    let energy = audio.energy;\n    let tempo = audio.tempo;\n    let happiness = audio.happiness;\n    let tracks_popularity = tracks.average_popularity;\n    let artists_popularity = artists.average_popularity;\n\n    const emojiList = [\n      [[0, 1.7], '🧍🧍🧍', '💤💤💤', '😫😫😫', '👤👤👤'],\n      [[1.7, 3.3], '🧍🧍', '💤💤', '😫😫', '👤👤'],\n      [[3.3, 5.0], '🧍', '💤', '😫', '👤'],\n      [[5.0, 6.7], '💃', '⚡', '😆', '🔥'],\n      [[6.7, 8.4], '💃💃', '⚡⚡', '😆😆', '🔥🔥'],\n      [[8.4, 10.0], '💃💃💃', '⚡⚡⚡', '😆😆😆', '🔥🔥🔥']\n    ]\n\n    const tempoEmoji = [\n      [[0, 40], '🐌🐌🐌'],\n      [[40, 66], '🐌🐌'],\n      [[66, 76], '🐌'],\n      [[76, 120], '🚀'],\n      [[120, 168], '🚀🚀'],\n      [[168, Number.MAX_VALUE], '🚀🚀🚀']\n    ]\n\n    for (let i = 0; i < 6; i++) {\n      let valueRange = emojiList[i][0];\n      let begin = valueRange[0];\n      let end = valueRange[1];\n\n      if (danceability >= begin && danceability <= end) {\n        setDanceabilityEmoji(emojiList[i][1]);\n      }\n      if (energy >= begin && energy <= end) {\n        setEnergyEmoji(emojiList[i][2]);\n      }\n      if (happiness >= begin && happiness <= end) {\n        setHappinessEmoji(emojiList[i][3]);\n      }\n      if (tracks_popularity >= begin && tracks_popularity <= end) {\n        setTracksPopularityEmoji(emojiList[i][4]);\n      }\n      if (artists_popularity >= begin && artists_popularity <= end) {\n        setArtistsPopularityEmoji(emojiList[i][4]);\n      }\n    }\n\n    for (let i = 0; i < 6; i++) {\n      let valueRange = tempoEmoji[i][0];\n      let begin = valueRange[0];\n      let end = valueRange[1];\n      if (tempo >= begin && tempo <= end) {\n        setTempoEmoji(tempoEmoji[i][1]);\n      }\n    }\n  }\n\n\n\n  const toCanvas = () => {\n    let category;\n    if (topVisible === 'top tracks') {\n      category = '#tracks_img'\n    }\n    if (topVisible === 'top artists') {\n      category = '#artists_img'\n    }\n\n    window.scrollTo(0, 0);\n    html2canvas(document.querySelector(category), {\n      useCORS: true,\n      allowTaint: true\n    }).then(canvas => {\n      let a = document.createElement('a');\n      a.download = \"artists_collage.png\";\n      a.href = canvas.toDataURL();\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      a = null;\n    });\n  }\n\n  const toggleCardsButton = () => {\n    if (showText === true) {\n      setShowTextMessage(\"show all\");\n    }\n    if (showText === false) {\n      setShowTextMessage(\"hide all\");\n    }\n  }\n\n  const resetCardsButton = () => {\n    setAreCardsVisible(false);\n    setShowText(false);\n    setShowTextMessage('show all');\n  }\n\n  const application = <>\n    <div className=\"audio-feature-texfield\">\n      <AudioFeature\n        emoji={danceabilityEmoji}\n        category='danceability'\n        score={audioFeatures.danceability}\n        scale='/10'/>\n      <AudioFeature\n        emoji={energyEmoji}\n        category='energy'\n        score={audioFeatures.energy}\n        scale='/10'/>\n      <AudioFeature\n        emoji={tempoEmoji}\n        category='tempo'\n        score={audioFeatures.tempo}\n        scale=' bpm'/>\n      <AudioFeature\n        emoji={happinessEmoji}\n        category='happiness'\n        score={audioFeatures.happiness}\n        scale='/10'/>\n    </div>\n\n    <div className=\"top-buttons\">\n      <TopButton\n        onClick={() => {\n          setTopVisible('top tracks');\n          setAreCardsVisible(false);\n          resetCardsButton();\n        }}\n        category={'tracks'}\n        isSelected={topVisible === \"top tracks\"}/>\n\n      <TopButton\n        onClick={() => {\n          setTopVisible('top artists');\n          setAreCardsVisible(false);\n          resetCardsButton();\n        }}\n        category={'artists'}\n        isSelected={topVisible === \"top artists\"}/>\n    </div>\n\n    <div className=\"popularity-textfield\">\n      <Popularity\n        popularityEmoji={artistsPopularityEmoji}\n        leastMainstreamEmoji={leastMainstreamEmoji}\n        averagePopularity={artistsPopularity.average_popularity}\n        name={artistsPopularity.least_mainstream_artist_name}\n        link={artistsPopularity.least_mainstream_artist_url}\n        isVisible={topVisible === 'top artists'}/>\n\n      <Popularity\n        popularityEmoji={tracksPopularityEmoji}\n        leastMainstreamEmoji={leastMainstreamEmoji}\n        averagePopularity={tracksPopularity.average_popularity}\n        name={tracksPopularity.least_mainstream_track_name}\n        link={tracksPopularity.least_mainstream_track_url}\n        isVisible={topVisible === 'top tracks'}/>\n    </div>\n\n    <div className=\"collage\">\n      <div style={{\"overflow\": \"scroll\"}}>\n        <Collage id=\"tracks_img\"\n                 category=\"tracks\"\n                 term={termText}\n                 images={tracksCollage}\n                 isVisible={topVisible === 'top tracks'}/>\n      </div>\n\n      <div style={{\"overflow\": \"scroll\"}}>\n        <Collage id=\"artists_img\"\n                 category=\"artists\"\n                 term={termText}\n                 images={artistsCollage}\n                 isVisible={topVisible === 'top artists'}/>\n      </div>\n    </div>\n\n    <div className=\"save-and-share\">\n      <SaveButton onClick={toCanvas}\n                  isVisible={topVisible === 'top tracks'}/>\n      <SaveButton onClick={toCanvas}\n                  isVisible={topVisible === 'top artists'}/>\n    </div>\n\n    <div className=\"all-cards\">\n      {React.Children.toArray(\n        tracksData.map((track_data) => (\n          <Card\n            areCardsVisible={areCardsVisible}\n            backgroundUrl={track_data.track_background}\n            link={track_data.track_url}\n            text={`${track_data.track_rank} ${track_data.track_name}`}\n            subtext={track_data.track_artists}\n            isCardVisible={topVisible === 'top tracks'}/>\n        )))}\n\n      {React.Children.toArray(\n        artistsData.map((artist_data) => (\n          <Card\n            areCardsVisible={areCardsVisible}\n            backgroundUrl={artist_data.artist_background}\n            link={artist_data.artist_url}\n            text={`${artist_data.artist_rank} ${artist_data.artist_name}`}\n            subtext={artist_data.artist_followers}\n            isCardVisible={topVisible === 'top artists'}/>\n        )))}\n    </div>\n\n    <ShowAllButton\n      onClick={() => {\n        setAreCardsVisible(!areCardsVisible)\n        setShowText(!showText)\n        toggleCardsButton();\n      }}\n      show={showTextMessage + ' ' + topVisible}/></>;\n\n  return (\n    <div className=\"App\">\n\n      <GithubCorner href=\"https://github.com/mudassarzahid/miniwrap\"/>\n\n      <div id=\"wrapper\">\n        <div className=\"container\">\n\n          <div className=\"built-by\">built by <a href=\"https://twitter.com/mudassar_z\" target=\"_blank\"\n                                                rel=\"noreferrer\">Mudi</a></div>\n\n          <Headline username={userData}/>\n\n          <div className=\"term-buttons\">\n            <TermButton\n              onClick={() => {\n                setTermSelected('short_term');\n                setTerm('short_term')\n                setAreCardsVisible(false);\n                resetCardsButton();\n              }}\n              value=\"short_term\"\n              termdesc=\"4 weeks\"\n              isSelected={termSelected === 'short_term'}/>\n\n            <TermButton\n              onClick={() => {\n                setTermSelected('medium_term');\n                setTerm('medium_term')\n                setAreCardsVisible(false);\n                resetCardsButton();\n              }}\n              value=\"medium_term\"\n              termdesc=\"6 months\"\n              isSelected={termSelected === 'medium_term'}/>\n\n            <TermButton\n              onClick={() => {\n                setTermSelected('long_term');\n                setTerm('long_term')\n                setAreCardsVisible(false);\n                resetCardsButton();\n              }}\n              value=\"long_term\"\n              termdesc=\"all time\"\n              isSelected={termSelected === 'long_term'}/>\n          </div>\n\n          {isLoading && <div className=\"spinner\">\n            <div className=\"rect1\"/>\n            <div className=\"rect2\"/>\n            <div className=\"rect3\"/>\n            <div className=\"rect4\"/>\n            <div className=\"rect5\"/>\n          </div>}\n\n          {!isLoading && application}\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport './Login.css';\nimport SpotifyLogin from 'react-spotify-login';\nimport {useHistory} from \"react-router-dom\";\nimport GithubCorner from \"react-github-corner\";\n\n\nconst onFailure = response => console.error(response);\n\nconst Login = props => {\n  let history = useHistory();\n  let url;\n  if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n    url = \"http://localhost:3001\"\n  } else {\n    url = \"https://wrapped.mudi.me\"\n  }\n\n  return (\n    <div>\n      <GithubCorner href=\"https://github.com/mudassarzahid/miniwrap\" />\n      <div className=\"login-headline\">Mini Wrap for Spotify</div>\n      <div className=\"login-sub-headline\">✨ generate your own collage ✨</div>\n\n      <div className=\"login-button\">\n        <SpotifyLogin clientId=\"0ab0f042b3e44b3086e978dacb7cee47\"\n                      redirectUri={`${url}/app`}\n                      scope=\"user-top-read user-read-private user-read-email\"\n                      onSuccess={response => {\n                        console.log(response);\n                        let access_token = response.access_token\n                        console.log(response)\n                        history.push(`/app?access_token=${access_token}`)\n                      }}\n                      onFailure={onFailure}/>\n      </div>\n\n      <div className=\"built-by\">\n        built by <a href=\"https://twitter.com/mudassar_z\" target=\"_blank\" rel=\"noreferrer\">Mudi</a>\n      </div>\n\n    </div>)\n};\n\nexport default Login;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Login from \"./Login\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n\n        <Route exact path=\"/\">\n          <Login/>\n        </Route>\n\n        <Route path=\"/app\">\n          <App/>\n        </Route>\n\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}